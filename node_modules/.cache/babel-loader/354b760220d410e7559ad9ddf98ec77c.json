{"ast":null,"code":"class RuledCheckout {\n  constructor(pricingRules) {\n    this.foundArticle = false;\n    this.items = [];\n    this.pricingRules = void 0;\n    this.items = {};\n    this.pricingRules = pricingRules;\n    return this;\n  }\n\n  scan(code) {\n    if (this.items[code]) {\n      this.items[code]++;\n    } else if (this.pricingRules[code]) {\n      this.items[code] = 1;\n      this.foundArticle = true;\n    }\n\n    return this;\n  }\n\n  total() {\n    const totalReducer = function (sum, _ref) {\n      let [code, qty] = _ref;\n      const applyRules = this.pricingRules[code];\n      const itemSubtotal = applyRules(qty);\n      return sum + itemSubtotal;\n    };\n\n    return Object.entries(this.items).reduce(totalReducer.bind(this), 0);\n  }\n\n}\n\nexport { RuledCheckout };","map":{"version":3,"names":["RuledCheckout","constructor","pricingRules","foundArticle","items","scan","code","total","totalReducer","sum","qty","applyRules","itemSubtotal","Object","entries","reduce","bind"],"sources":["/Users/pguasco/Projects/challenge-cabify/src/entities/checkout.ts"],"sourcesContent":["import type Checkout from './ICheckout';\n\ntype Code = string & ('TSHIRT' | 'MUG' | 'CAP');\n\ntype Quantity = number;\n\ntype Items = Record<Code, Quantity>;\n\ntype PricingRules = Record<Code, (quantity: Quantity) => number>;\n\ntype TotalReducer = (sum: number, item: Array<Code | Quantity>) => number;\n\ntype Item  = {\n  code: string,\n  name: string,\n  quantity: number,\n  price: number,\n}\n\nclass RuledCheckout implements Checkout {\n  \n  foundArticle: boolean = false;\n\n  private items: Item[] = [];\n\n  private pricingRules: PricingRules;\n\n\n  constructor(pricingRules: PricingRules) {\n    this.items = {} as Items;\n    this.pricingRules = pricingRules;\n    return this;\n  }\n\n  scan(code: string) {\n    if (this.items[code as Code]) {\n      this.items[code as Code]++;\n    } else if (this.pricingRules[code as Code]) {\n      this.items[code as Code] = 1;\n      this.foundArticle = true;\n    }\n    return this;\n  }\n\n  total() {\n    const totalReducer: TotalReducer = function(sum, [code, qty]) {\n      const applyRules = this.pricingRules[code]\n      const itemSubtotal = applyRules(qty);\n      return sum + itemSubtotal;\n    };\n\n    return Object\n      .entries(this.items)\n      .reduce(totalReducer.bind(this), 0) as number;\n  }\n}\n\nexport { RuledCheckout };"],"mappings":"AAmBA,MAAMA,aAAN,CAAwC;EAStCC,WAAW,CAACC,YAAD,EAA6B;IAAA,KAPxCC,YAOwC,GAPhB,KAOgB;IAAA,KALhCC,KAKgC,GALhB,EAKgB;IAAA,KAHhCF,YAGgC;IACtC,KAAKE,KAAL,GAAa,EAAb;IACA,KAAKF,YAAL,GAAoBA,YAApB;IACA,OAAO,IAAP;EACD;;EAEDG,IAAI,CAACC,IAAD,EAAe;IACjB,IAAI,KAAKF,KAAL,CAAWE,IAAX,CAAJ,EAA8B;MAC5B,KAAKF,KAAL,CAAWE,IAAX;IACD,CAFD,MAEO,IAAI,KAAKJ,YAAL,CAAkBI,IAAlB,CAAJ,EAAqC;MAC1C,KAAKF,KAAL,CAAWE,IAAX,IAA2B,CAA3B;MACA,KAAKH,YAAL,GAAoB,IAApB;IACD;;IACD,OAAO,IAAP;EACD;;EAEDI,KAAK,GAAG;IACN,MAAMC,YAA0B,GAAG,UAASC,GAAT,QAA2B;MAAA,IAAb,CAACH,IAAD,EAAOI,GAAP,CAAa;MAC5D,MAAMC,UAAU,GAAG,KAAKT,YAAL,CAAkBI,IAAlB,CAAnB;MACA,MAAMM,YAAY,GAAGD,UAAU,CAACD,GAAD,CAA/B;MACA,OAAOD,GAAG,GAAGG,YAAb;IACD,CAJD;;IAMA,OAAOC,MAAM,CACVC,OADI,CACI,KAAKV,KADT,EAEJW,MAFI,CAEGP,YAAY,CAACQ,IAAb,CAAkB,IAAlB,CAFH,EAE4B,CAF5B,CAAP;EAGD;;AAnCqC;;AAsCxC,SAAShB,aAAT"},"metadata":{},"sourceType":"module"}