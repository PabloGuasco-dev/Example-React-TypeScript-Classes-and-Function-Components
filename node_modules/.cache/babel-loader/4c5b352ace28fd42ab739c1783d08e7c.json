{"ast":null,"code":"// Buy two of them, get one free. (e.g: pay 10€ for 4 mugs)\nexport const twoForOneRule = unitPrice => function () {\n  let quantity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  // const pairs = Math.floor(quantity / 2);\n  // could also be \n  const pairs = ~~(quantity / 2);\n  const spare = quantity - pairs * 2; // could also be spare = quantity % 2;\n\n  const discounted = unitPrice * pairs;\n  const normal = unitPrice * spare;\n  return discounted + normal;\n}; // Buying 3 or more of this product, the price per unit is reduced by 5%\n\nexport const fivePercentDiscountOverThree = unitPrice => function () {\n  let quantity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  const calculatedUnitPrice = quantity >= 3 ? unitPrice * 0.95 : unitPrice;\n  return calculatedUnitPrice * quantity;\n};\nexport const defaultRule = unitPrice => function () {\n  let quantity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return unitPrice * quantity;\n};","map":{"version":3,"names":["twoForOneRule","unitPrice","quantity","pairs","spare","discounted","normal","fivePercentDiscountOverThree","calculatedUnitPrice","defaultRule"],"sources":["/Users/pguasco/Projects/challenge-cabify/src/rules/pricingRules.ts"],"sourcesContent":["type PricingRule = (quantity: number) => number;\ntype RuleCreator = (unitPrice: number) => PricingRule;\n\n// Buy two of them, get one free. (e.g: pay 10€ for 4 mugs)\nexport const twoForOneRule: RuleCreator = (unitPrice) => (quantity = 0) => {\n  // const pairs = Math.floor(quantity / 2);\n  // could also be \n  const pairs = ~~(quantity / 2)\n  const spare = quantity - (pairs * 2);\n  // could also be spare = quantity % 2;\n\n  const discounted = unitPrice * pairs;\n  const normal = unitPrice * spare;\n  return discounted + normal;\n}\n\n// Buying 3 or more of this product, the price per unit is reduced by 5%\nexport const fivePercentDiscountOverThree: RuleCreator = (unitPrice) => (quantity = 0) => {\n  const calculatedUnitPrice = quantity >= 3\n    ? unitPrice * 0.95\n    : unitPrice\n  return calculatedUnitPrice * quantity;\n}\n\nexport const defaultRule: RuleCreator = (unitPrice) => (quantity = 0) => unitPrice * quantity;\n\n"],"mappings":"AAGA;AACA,OAAO,MAAMA,aAA0B,GAAIC,SAAD,IAAe,YAAkB;EAAA,IAAjBC,QAAiB,uEAAN,CAAM;EACzE;EACA;EACA,MAAMC,KAAK,GAAG,CAAC,EAAED,QAAQ,GAAG,CAAb,CAAf;EACA,MAAME,KAAK,GAAGF,QAAQ,GAAIC,KAAK,GAAG,CAAlC,CAJyE,CAKzE;;EAEA,MAAME,UAAU,GAAGJ,SAAS,GAAGE,KAA/B;EACA,MAAMG,MAAM,GAAGL,SAAS,GAAGG,KAA3B;EACA,OAAOC,UAAU,GAAGC,MAApB;AACD,CAVM,C,CAYP;;AACA,OAAO,MAAMC,4BAAyC,GAAIN,SAAD,IAAe,YAAkB;EAAA,IAAjBC,QAAiB,uEAAN,CAAM;EACxF,MAAMM,mBAAmB,GAAGN,QAAQ,IAAI,CAAZ,GACxBD,SAAS,GAAG,IADY,GAExBA,SAFJ;EAGA,OAAOO,mBAAmB,GAAGN,QAA7B;AACD,CALM;AAOP,OAAO,MAAMO,WAAwB,GAAIR,SAAD,IAAe;EAAA,IAACC,QAAD,uEAAY,CAAZ;EAAA,OAAkBD,SAAS,GAAGC,QAA9B;AAAA,CAAhD"},"metadata":{},"sourceType":"module"}